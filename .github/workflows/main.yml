name: CI
on:
  pull_request:
    branches:
    - main
  push:
    branches:
      - main
  release:
    types:
      - published
      - prereleased

jobs:
  GenrateArtifacts:
    runs-on: ubuntu-latest
    steps:
      - name: generate artifacts
        run: |
          echo "artifact1" > artifact1.txt
          echo "artifact2" > artifact2.txt
          echo "{'artifact3':true}" > artifact3.json
          echo "{'artifact4':true}" > artifact4.json
          echo "artifact5" > artifact5

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: 'artifact*'


  ReusableWorkflowWithMultipleLabels:
    uses: ./.github/workflows/reusable_workflow.yml
    with:
      runners_tags: ubuntu-latest, something-else, another-tag
      download_artifacts_pattern: '*.json'


  ReusableWorkflowWithSingleLable:
    uses: ./.github/workflows/reusable_workflow.yml
    with:
      runners_tags: ubuntu-latest
      download_artifacts_pattern: '*'


  ReusableWorkflowWithArtifactFilter:
    needs: GenrateArtifacts
    uses: ./.github/workflows/reusable_workflow.yml
    with:
      runners_tags: ubuntu-latest
      download_artifacts_pattern: '*.json'


  ReusableWorkflowWithArtifactFilter2:
    needs: GenrateArtifacts
    uses: ./.github/workflows/reusable_workflow.yml
    with:
      runners_tags: ubuntu-latest
      download_artifacts_pattern: '*'



#   second:
#     runs-on: ubuntu-latest
#     needs: [first]
#     if: always()
#     steps:
#       - name: print stuff and fail
#         run: echo Hello again!
    
#   third:
#     runs-on: ubuntu-latest
#     needs: [first, second]
# #     # Run AFTER `second`, but only if `first` succeed.
# #     # Since we can't reference jobs directly and get their status, 
# #     # check if any of jobs succeeds.
# #     if: ${{ always() && contains(needs.*.result, 'success') }}
#     steps:
#       - name: print stuff and pass
#         run: echo '${{ toJson(needs) }}'

#   fourth:
#     runs-on: ubuntu-latest
#     needs: [first, second]
#     # Run AFTER `second`, but only if `first` succeed.
#     # Since we can't reference jobs directly and get their status, 
#     # check if any of jobs succeeds.
# #     if: always()
#     steps:
#       - name: print stuff and pass
#         run: echo '${{ join(needs.*.result) }}' && false || exit -1

#   fifth:
#     runs-on: ubuntu-latest
#     needs: [third]
#     if: ${{ contains(needs.*.result, 'success') }}
#     steps:
#       - name: print stuff and fail
#         run: echo Hello from '${{ toJson(job) }}'!

#   sixth:
#     runs-on: ubuntu-latest
#     needs: [third]
#     if: ${{ contains(needs.*.result, 'success') }}
#     steps:
#       - name: print stuff and fail
#         run: echo Hello from '${{ toJson(job) }}'!
